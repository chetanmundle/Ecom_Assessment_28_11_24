[
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "AddToCart",
    "RelativePath": "api/Cart/AddToCart",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addToCartDto",
        "Type": "App.Core.Models.Cart.AddToCartDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "DecrementItemInCart",
    "RelativePath": "api/Cart/DecrementItemInCart",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "incrementtDto",
        "Type": "App.Core.Models.Cart.IncrementCartQuntityDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "GetAllCartItemByUserId",
    "RelativePath": "api/Cart/GetAllCartItemByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "GetAllCartItemWithDetailsByUserId",
    "RelativePath": "api/Cart/GetAllCartItemWithDetailsByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "IncrementItemInCart",
    "RelativePath": "api/Cart/IncrementItemInCart",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "incrementDto",
        "Type": "App.Core.Models.Cart.IncrementCartQuntityDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "PaymentAndPlaceOrder",
    "RelativePath": "api/Cart/PaymentAndPlaceOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentAndOrderDto",
        "Type": "App.Core.Models.Card.PaymentAndOrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CartController",
    "Method": "RemoveItemFromCart",
    "RelativePath": "api/Cart/RemoveItemFromCart/{cartDetailId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartDetailId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CountryStateController",
    "Method": "GetAllCountries",
    "RelativePath": "api/CountryState/GetAllCountries",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CountryStateController",
    "Method": "GetAllStatesByCountryId",
    "RelativePath": "api/CountryState/GetAllStatesByCountryId/{countryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "countryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ImageUpload.Controllers.ImageController",
    "Method": "UploadFile",
    "RelativePath": "api/Image/UploadFile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.OtpController",
    "Method": "SendOtp",
    "RelativePath": "api/Otp/SendOtp/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product/CreateProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createProductDto",
        "Type": "App.Core.Models.Product.CreateProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "DeleteProductById",
    "RelativePath": "api/Product/DeleteProductById/{productId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Product/GetAllProducts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "GetProcutByUserId",
    "RelativePath": "api/Product/GetProcutByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "GetProductById",
    "RelativePath": "api/Product/GetProductById/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/UpdateProduct",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateProductDto",
        "Type": "App.Core.Models.Product.UpdateProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.SalesController",
    "Method": "GetInvoice",
    "RelativePath": "api/Sales/GetInvoice/{invoId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "invoId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "ChangePassword",
    "RelativePath": "api/User/ChangePassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordDto",
        "Type": "App.Core.Models.Users.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User/CreateUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserDto",
        "Type": "App.Core.Models.Users.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "ForgetPassword",
    "RelativePath": "api/User/ForgetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgetPasswordDto",
        "Type": "App.Core.Models.Users.ForgetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "GetUserByUserName",
    "RelativePath": "api/User/GetUserByUserName/{userName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "LoginUser",
    "RelativePath": "api/User/LoginUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserDto",
        "Type": "App.Core.Models.Users.LoginUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.UserController",
    "Method": "LoginUserValidateOtp",
    "RelativePath": "api/User/LoginUserValidateOtp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserValidateOtpDto",
        "Type": "App.Core.Models.Users.LoginUserValidateOtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]